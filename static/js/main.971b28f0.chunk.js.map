{"version":3,"sources":["lib/components/helpers/hexagon.js","lib/components/helpers/circle.js","lib/components/helpers/square.js","lib/index.js","lib/components/ColorPicker.js","button-helpers/square-button.js","button-helpers/circle-button.js","button-helpers/hexagon-button.js","button-helpers/button.js","code-snippets/code-snippets.js","code-snippets/render-code.js","App.js","reportWebVitals.js","index.js"],"names":["HexagonInput","styled","input","attrs","type","props","theme","height","color","defaultProps","Hexagon","defaultColor","onChange","useState","setColor","setTheme","useEffect","value","onInput","e","target","updatedTheme","CircleInput","Circle","Square","style","ColorPicker","shape","handleChange","change","SquareButtonStyle","div","SquareButton","isActive","CircleButtonStyle","CircleButton","HexagonButtonStyle","HexagonButton","Buttons","renderButton","className","backgroundColor","colorpickerCode","Code","codes","section","id","copy","copyText","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","alert","renderCodeBlock","elem","code","i","length","onClick","map","codeBlockHelper","App","setShape","repo","colorBackground","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.971b28f0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled, { ThemeProvider } from \"styled-components\";\n\n\nconst HexagonInput = styled.input.attrs({ \n  type: 'color',\n})`\n    height: ${props => props.theme.height}px;\n    width: ${props => 2/3 * props.theme.height}px;\n    background: ${props => props.theme.color};\n    position: relative;\n    // left: ${props => 0.25 * props.theme.height}px;\n    box-sizing: border-box;\n  \n  &:before, &:after {\n    content: \"\";\n    position: absolute;\n    height: 0;\n    width:  0;\n    top:  0;\n    border-top: ${props => 0.5 * props.theme.height}px solid transparent; \n    border-bottom: ${props => 0.5 * props.theme.height}px solid transparent; \n  }\n  &:before {\n    left: -${props => 0.25 * props.theme.height}px;\n    border-right: ${props => 0.25 * props.theme.height}px solid ${props => props.theme.color};\n  }\n  &:after {\n    right: -${props => 0.25 * props.theme.height}px;\n    border-left: ${props => 0.25 * props.theme.height}px solid ${props => props.theme.color};\n  }         \n`\n\nHexagonInput.defaultProps = {\n  theme: {\n    color: \"#000000\",\n    height: 100\n  }\n}\n\nconst Hexagon = ({height, defaultColor, onChange}) => {\n\n  const [color, setColor] = useState(defaultColor) // handles center of hexagon (square)\n  const [theme, setTheme] = useState({ // handles sides of hexagon (triangles)\n    color: defaultColor,\n    height: height\n  })\n\n  // Update color when user selects a different input\n  const handleChange = (e) => {\n    setColor(e.target.value)\n    const updatedTheme = {...theme, color: e.target.value}\n    setTheme(updatedTheme)\n  }\n\n  useEffect(() => {\n    onChange(color)\n  }, [color])\n\n  return (\n    <>\n    <ThemeProvider theme={theme}>\n      <HexagonInput \n        data-testid=\"hexagon\"\n        value={color}\n        onInput={handleChange}\n      />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default Hexagon;","import React, { useState, useEffect } from 'react';\nimport styled, { ThemeProvider } from \"styled-components\";\n\n\nconst CircleInput = styled.input.attrs({ \n  type: 'color'\n})`\n    border: 0;\n    border-radius: 50%;\n    overflow: hidden;\n    background: ${props => props.theme.color};\n    color: ${props => props.theme.color};\n    height: ${props => props.theme.height}px;\n    width: ${props => props.theme.height}px;\n`\n\nCircleInput.defaultProps = {\n  theme: {\n    color: \"#000000\",\n    height: 100\n  }\n}\n\nconst Circle = ({height, defaultColor, onChange}) => {\n\n  const [color, setColor] = useState(defaultColor)\n\n  const theme = {\n    color: color,\n    height: height\n  }\n\n  // handle event where user changes image\n  const handleChange = (e) => {\n    setColor(e.target.value)\n  }\n\n  useEffect(() => {\n    onChange(color)\n  }, [color])\n\n  return (\n    <>\n    <ThemeProvider theme={theme}>\n      <CircleInput \n        data-testid=\"circle\"\n        value={color}\n        onInput={handleChange}\n      />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default Circle;","import React, { useState, useEffect } from 'react';\n\nconst Square = ({height, defaultColor, onChange}) => {\n\n  const [color, setColor] = useState(defaultColor) // handles center of hexagon (square)\n  const [theme, setTheme] = useState({ // handles sides of hexagon (triangles)\n    color: defaultColor,\n    height: height\n  })\n\n  // Update color when user selects a different input\n  const handleChange = (e) => {\n    setColor(e.target.value)\n    const updatedTheme = {...theme, color: e.target.value}\n    setTheme(updatedTheme)\n  }\n\n  useEffect(() => {\n    onChange(color)\n  }, [color])\n\n  return (\n    <input \n        data-testid=\"square\"\n        value={color} \n        type=\"color\" \n        style={{'height': height, 'width': height}}\n        onInput={handleChange}\n    />\n  );\n}\n\nexport default Square;","import ColorPicker from './components/ColorPicker';\n\nexport default ColorPicker;","import React from 'react';\nimport './ColorPicker.css'\nimport Hexagon from './helpers/hexagon'\nimport Circle from './helpers/circle'\nimport Square from './helpers/square';\n\nconst ColorPicker = ({height=100, shape=\"square\", defaultColor=\"#14E298\", onChange}) => {  \n\n  const handleChange = (change) => {\n    onChange(change)\n  }\n\n  return (\n    <>\n      {shape === 'circle' && <Circle height={height} defaultColor={defaultColor} onChange={handleChange}/>}\n      {shape === 'square' && <Square defaultColor={defaultColor} height={height} onChange={handleChange}/>}\n      {shape === 'hexagon' && <Hexagon height={height} defaultColor={defaultColor} onChange={handleChange}/>}\n    </>\n  );\n}\n\nexport default ColorPicker;\n","import React from 'react';\nimport styled, { ThemeProvider } from \"styled-components\";\n\n\nconst SquareButtonStyle = styled.div`\n    height: 30px;\n    width: 30px;\n    background: ${props => props.theme.color};\n    margin: 0 auto;\n`\n\nSquareButtonStyle.defaultProps = {\n  theme: {\n    color: \"#000000\"\n  }\n}\n\nconst SquareButton = ({defaultColor, isActive=false}) => {\n\n  const theme = {color: isActive ? 'white': defaultColor}\n\n  return (\n    <ThemeProvider theme={theme}>\n      <SquareButtonStyle/>\n    </ThemeProvider>\n    \n  );\n}\n\nexport default SquareButton;","import React from 'react';\nimport styled, { ThemeProvider } from \"styled-components\";\n\n\nconst CircleButtonStyle = styled.div`\n    height: 30px;\n    width: 30px;\n    border-radius: 50%;\n    overflow: hidden;\n    background: ${props => props.theme.color};\n    margin: 0 auto;\n`\n\nCircleButtonStyle.defaultProps = {\n  theme: {\n    color: \"#000000\"\n  }\n}\n\nconst CircleButton = ({defaultColor, isActive=false}) => {\n\n  const theme = {color: isActive ? 'white': defaultColor}\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CircleButtonStyle/>\n    </ThemeProvider>\n    \n  );\n}\n\nexport default CircleButton;","import React from 'react';\nimport styled, { ThemeProvider } from \"styled-components\";\n\n\nconst HexagonButtonStyle = styled.div`\n    height: ${props => props.theme.height}px;\n    width: ${props => 2/3 * props.theme.height}px;\n    background: ${props => props.theme.color};\n    position: relative;\n    // left: ${props =>1 * props.theme.height}px;\n    box-sizing: border-box;\n  &:before, &:after {\n    content: \"\";\n    position: absolute;\n    height: 0;\n    width:  0;\n    top:  0;\n    border-top: ${props => 0.5 * props.theme.height}px solid transparent; \n    border-bottom: ${props => 0.5 * props.theme.height}px solid transparent; \n  }\n  &:before {\n    left: -${props => 0.25 * props.theme.height}px;\n    border-right: ${props => 0.25 * props.theme.height}px solid ${props => props.theme.color};\n  }\n  &:after {\n    right: -${props => 0.25 * props.theme.height}px;\n    border-left: ${props => 0.25 * props.theme.height}px solid ${props => props.theme.color};\n  }         \n`\n\nHexagonButtonStyle.defaultProps = {\n  theme: {\n    color: \"#000000\",\n    height: 50\n  }\n}\n\nconst HexagonButton = ({defaultColor, isActive=false}) => {\n\n  const theme = {color: isActive ? 'white': defaultColor, height: 30}\n\n  return (\n    <ThemeProvider theme={theme}>\n      <HexagonButtonStyle />\n    </ThemeProvider>\n    \n  );\n}\n\nexport default HexagonButton;","import React from 'react';\nimport SquareButton from './square-button'\nimport CircleButton from './circle-button'\nimport HexagonButton from './hexagon-button';\n\n\nconst Buttons = ({shape, defaultColor, isActive=false}) => {\n\n  // renders a single button (active button)\n  const renderButton = () => {\n      return (\n        <>\n            {shape === 'square' && <SquareButton defaultColor={defaultColor} isActive={isActive}/>}\n            {shape === 'circle' && <CircleButton defaultColor={defaultColor} isActive={isActive}/>}\n            {shape === 'hexagon' && <HexagonButton defaultColor={defaultColor} isActive={isActive}/>}\n        </>\n      )\n  }\n  // renders an inactive button\n  const renderInactiveButton = () => {\n      return (\n        <div className='button ring' style={{backgroundColor: defaultColor}}>\n            <div className='button ring-inner' style={{backgroundColor: 'white'}}>\n                {renderButton()}\n            </div>\n        </div>\n      ) \n  }\n  \n  return (\n    <div className='button internal' style={{backgroundColor: isActive ? defaultColor : \"white\"}}>\n        {isActive ? renderButton(): renderInactiveButton()}\n    </div>\n  );\n}\n\nexport default Buttons;","const colorpickerCode = (shape, color, height) => { \nreturn `import ColorPicker from 'shapely-colorpicker';\n\nconst [color, setColor] = useState(\"${color}\")\n\nconst handleChange = (change) => {\n    setColor(change)\n}\n\n<ColorPicker  \n    shape=\"${shape}\" \n    defaultColor=\"${color}\" \n    height={${height}}\n    onChange={handleChange}\n/>\n`\n}\nconst installCode = `npm install shapely-colorpicker`\n\n\nexport {colorpickerCode, installCode};","import React from 'react';\nimport { colorpickerCode, installCode } from './code-snippets'\n\nconst Code = ({shape, color, height}) => {\n\n    const codes = [\n        {\n            section: \"Snippet\",\n            id: \"snippet\",  \n            codes: [colorpickerCode(shape, color, height)]\n        },\n        {\n            section: \"Installation\",\n            id: \"install-code\",  \n            codes: [installCode]\n        }\n    ]\n\n  // handle copy text functionality\n  const copy = (e) => {\n\n    /* Get the text field */\n    var copyText = document.getElementById(`${e.target.id}-value`)\n\n    /* Select the text field */\n    copyText.select();\n    copyText.setSelectionRange(0, 99999); /* For mobile devices */\n\n    /* Copy the text inside the text field */\n    navigator.clipboard.writeText(copyText.value)\n\n    /* Alert the copied text */\n    alert(\"Copied!\");   \n}\n\n// helper function to renderCodeBlock\n// renders a block of code\nconst codeBlockHelper = (i, code) => {\n    return (\n        <pre key={i}>\n            <code>{code}</code>\n        </pre>\n    )\n}\n\n// Renders code section\nconst renderCodeBlock = (elem) => {\n    var code = \"\"\n    for (let i = 0; i < elem.codes.length; i++) {\n        code +=  elem.codes[i] + \"\\n\"\n    }\n    return (\n        <div key={elem.section}>\n            <h2>{elem.section}</h2>\n            <div className='sample-code'>\n                <input id={`${elem.id}-value`} value={code}/>\n                <i id={elem.id} onClick={copy} className=\"far fa-clipboard\"/>\n                {elem.codes.map((code, i) => codeBlockHelper(i, code))}\n            </div>\n        </div>\n      )\n  }\n  \n  return (\n    <div className='code-container'>\n        {codes.map((elem) => renderCodeBlock(elem))}\n    </div>\n  )\n}\n\nexport default Code;","import { useState } from 'react';\nimport './App.css';\nimport ColorPicker from './lib/index';\nimport ForkMeOnGithub from 'fork-me-on-github';\nimport Buttons from './button-helpers/button';\nimport Code from './code-snippets/render-code'\n\nfunction App() {\n  const height = 200\n  const [shape, setShape] = useState('circle')\n  const [color, setColor] = useState(\"#14E298\")\n  \n  const buttons = ['circle', 'square', 'hexagon']\n\n  // Handles changing color input\n  const handleChange = (change) => {\n    setColor(change)\n  }\n\n  // Formats all buttons\n  const renderButton = (elem) => {\n    return (\n      <button\n        key={elem}\n        id={elem}\n        data-testid={`${elem}-button`}\n        onClick={() => {\n          setShape(elem)\n        }}\n      >\n        <Buttons shape={elem} defaultColor={color} isActive={elem === shape}/>\n      </button>\n    )\n  }\n  \n  return (\n    <div className='colorpicker-container'>\n      <ForkMeOnGithub repo=\"https://github.com/lindseytam/colorpicker\" colorBackground={color}/>\n      <h1>Shapely Color Picker</h1>\n\n      {/* Format all buttons */}\n      <div className='button-container'>\n        {buttons.map((elem) => renderButton(elem))}\n      </div>\n\n      {/* Formats sample color picker */}\n      <div className='input-container'>\n        <ColorPicker height={height} defaultColor={color} shape={shape} onChange={handleChange}/>\n      </div>\n\n      {/* Formats all code snippets */}\n      <Code shape={shape} color={color} height={height} />\n\n      {/* Formats abouts section */}\n      <div className='about-container'>\n        <h2>About</h2>\n        <p className='about-text'>\n          This package makes it easy for users to set the shape, default color, and height of a color picker application for their react app. This colorpicker is designed to handle changes immediately.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}